FILE /classMembers.kt
  CLASS CLASS C
    CONSTRUCTOR public constructor C(x: kotlin.Int, y: kotlin.Int, z: kotlin.Int = ...)
      z: EXPRESSION_BODY
        CONST Int type=kotlin.Int value='1'
      BLOCK_BODY
        DELEGATING_CONSTRUCTOR_CALL 'constructor Any()'
        INSTANCE_INITIALIZER_CALL classDescriptor='C'
    PROPERTY public final val y: kotlin.Int
      EXPRESSION_BODY
        GET_VAR 'value-parameter y: Int' type=kotlin.Int operator=INITIALIZE_PROPERTY_FROM_PARAMETER
    PROPERTY public final var z: kotlin.Int
      EXPRESSION_BODY
        GET_VAR 'value-parameter z: Int = ...' type=kotlin.Int operator=INITIALIZE_PROPERTY_FROM_PARAMETER
    CONSTRUCTOR public constructor C()
      BLOCK_BODY
        DELEGATING_CONSTRUCTOR_CALL 'constructor C(Int, Int, Int = ...)'
          x: CONST Int type=kotlin.Int value='0'
          y: CONST Int type=kotlin.Int value='0'
          z: CONST Int type=kotlin.Int value='0'
    PROPERTY public final val property: kotlin.Int = 0
      EXPRESSION_BODY
        CONST Int type=kotlin.Int value='0'
    PROPERTY public final val propertyWithGet: kotlin.Int
      PROPERTY_GETTER public final fun <get-propertyWithGet>(): kotlin.Int
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='<get-propertyWithGet>(): Int'
            CONST Int type=kotlin.Int value='42'
    PROPERTY public final var propertyWithGetAndSet: kotlin.Int
      PROPERTY_GETTER public final fun <get-propertyWithGetAndSet>(): kotlin.Int
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='<get-propertyWithGetAndSet>(): Int'
            CALL '<get-z>(): Int' type=kotlin.Int operator=GET_PROPERTY
              $this: THIS of 'C' type=C
      PROPERTY_SETTER public final fun <set-propertyWithGetAndSet>(value: kotlin.Int): kotlin.Unit
        BLOCK_BODY
          CALL '<set-z>(Int): Unit' type=kotlin.Unit operator=EQ
            $this: THIS of 'C' type=C
            <set-?>: GET_VAR 'value-parameter value: Int' type=kotlin.Int operator=null
    FUN public final fun function(): kotlin.Unit
      BLOCK_BODY
        CALL 'println(Any?): Unit' type=kotlin.Unit operator=null
          message: CONST String type=kotlin.String value='1'
    FUN public final fun kotlin.Int.memberExtensionFunction(): kotlin.Unit
      BLOCK_BODY
        CALL 'println(Any?): Unit' type=kotlin.Unit operator=null
          message: CONST String type=kotlin.String value='2'
    CLASS CLASS NestedClass
      CONSTRUCTOR public constructor NestedClass()
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL 'constructor Any()'
          INSTANCE_INITIALIZER_CALL classDescriptor='NestedClass'
      FUN public final fun function(): kotlin.Unit
        BLOCK_BODY
          CALL 'println(Any?): Unit' type=kotlin.Unit operator=null
            message: CONST String type=kotlin.String value='3'
      FUN public final fun kotlin.Int.memberExtensionFunction(): kotlin.Unit
        BLOCK_BODY
          CALL 'println(Any?): Unit' type=kotlin.Unit operator=null
            message: CONST String type=kotlin.String value='4'
    CLASS INTERFACE NestedInterface
      FUN public abstract fun foo(): kotlin.Unit
      FUN public open fun bar(): kotlin.Unit
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='bar(): Unit'
            CALL 'foo(): Unit' type=kotlin.Unit operator=null
              $this: THIS of 'NestedInterface' type=C.NestedInterface
    CLASS OBJECT companion object of C
      CONSTRUCTOR private constructor Companion()
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL 'constructor Any()'
          INSTANCE_INITIALIZER_CALL classDescriptor='companion object of C'
