FILE /delegatedImplementation.kt
  CLASS INTERFACE IBase
    FUN public abstract fun foo(x: kotlin.Int, s: kotlin.String): kotlin.Unit
    FUN public abstract fun bar(): kotlin.Int
    FUN public abstract fun kotlin.String.qux(): kotlin.Unit
  CLASS OBJECT BaseImpl
    CONSTRUCTOR private constructor BaseImpl()
      BLOCK_BODY
        DELEGATING_CONSTRUCTOR_CALL 'constructor Any()'
        INSTANCE_INITIALIZER_CALL classDescriptor='BaseImpl'
    FUN public open override fun foo(x: kotlin.Int, s: kotlin.String): kotlin.Unit
      BLOCK_BODY
    FUN public open override fun bar(): kotlin.Int
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='bar(): Int'
          CONST Int type=kotlin.Int value='42'
    FUN public open override fun kotlin.String.qux(): kotlin.Unit
      BLOCK_BODY
  CLASS INTERFACE IOther
    PROPERTY public abstract val x: kotlin.String
    PROPERTY public abstract var y: kotlin.Int
    PROPERTY public abstract val kotlin.Byte.z1: kotlin.Int
    PROPERTY public abstract var kotlin.Byte.z2: kotlin.Int
  FUN public fun otherImpl(x0: kotlin.String, y0: kotlin.Int): IOther
    BLOCK_BODY
      RETURN type=kotlin.Nothing from='otherImpl(String, Int): IOther'
        BLOCK type=otherImpl.<no name provided> operator=OBJECT_LITERAL
          CLASS CLASS <no name provided>
            CONSTRUCTOR public constructor <no name provided>()
              BLOCK_BODY
                DELEGATING_CONSTRUCTOR_CALL 'constructor Any()'
                INSTANCE_INITIALIZER_CALL classDescriptor='<no name provided>'
            PROPERTY public open override val x: kotlin.String
              EXPRESSION_BODY
                GET_VAR 'value-parameter x0: String' type=kotlin.String operator=null
            PROPERTY public open override var y: kotlin.Int
              EXPRESSION_BODY
                GET_VAR 'value-parameter y0: Int' type=kotlin.Int operator=null
            PROPERTY public open override val kotlin.Byte.z1: kotlin.Int
              PROPERTY_GETTER public open override fun kotlin.Byte.<get-z1>(): kotlin.Int
                BLOCK_BODY
                  RETURN type=kotlin.Nothing from='<get-z1>() on Byte: Int'
                    CONST Int type=kotlin.Int value='1'
            PROPERTY public open override var kotlin.Byte.z2: kotlin.Int
              PROPERTY_GETTER public open override fun kotlin.Byte.<get-z2>(): kotlin.Int
                BLOCK_BODY
                  RETURN type=kotlin.Nothing from='<get-z2>() on Byte: Int'
                    CONST Int type=kotlin.Int value='2'
              PROPERTY_SETTER public open override fun kotlin.Byte.<set-z2>(value: kotlin.Int): kotlin.Unit
                BLOCK_BODY
          CALL 'constructor <no name provided>()' type=otherImpl.<no name provided> operator=OBJECT_LITERAL
  CLASS CLASS Test1
    CONSTRUCTOR public constructor Test1()
      BLOCK_BODY
        DELEGATING_CONSTRUCTOR_CALL 'constructor Any()'
        INSTANCE_INITIALIZER_CALL classDescriptor='Test1'
    PROPERTY val `Test1$IBase$delegate`: BaseImpl
      EXPRESSION_BODY
        GET_OBJECT 'BaseImpl' type=BaseImpl
    FUN public open override fun bar(): kotlin.Int
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='bar(): Int'
          CALL 'bar(): Int' type=kotlin.Int operator=null
            $this: GET_VAR '`Test1$IBase$delegate`: BaseImpl' type=BaseImpl operator=null
    FUN public open override fun foo(x: kotlin.Int, s: kotlin.String): kotlin.Unit
      BLOCK_BODY
        CALL 'foo(Int, String): Unit' type=kotlin.Unit operator=null
          $this: GET_VAR '`Test1$IBase$delegate`: BaseImpl' type=BaseImpl operator=null
          x: GET_VAR 'value-parameter x: Int' type=kotlin.Int operator=null
          s: GET_VAR 'value-parameter s: String' type=kotlin.String operator=null
    FUN public open override fun kotlin.String.qux(): kotlin.Unit
      BLOCK_BODY
        CALL 'qux() on String: Unit' type=kotlin.Unit operator=null
          $this: GET_VAR '`Test1$IBase$delegate`: BaseImpl' type=BaseImpl operator=null
          $receiver: $RECEIVER of 'qux() on String: Unit' type=kotlin.String
  CLASS CLASS Test2
    CONSTRUCTOR public constructor Test2()
      BLOCK_BODY
        DELEGATING_CONSTRUCTOR_CALL 'constructor Any()'
        INSTANCE_INITIALIZER_CALL classDescriptor='Test2'
    PROPERTY val `Test2$IBase$delegate`: BaseImpl
      EXPRESSION_BODY
        GET_OBJECT 'BaseImpl' type=BaseImpl
    FUN public open override fun bar(): kotlin.Int
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='bar(): Int'
          CALL 'bar(): Int' type=kotlin.Int operator=null
            $this: GET_VAR '`Test2$IBase$delegate`: BaseImpl' type=BaseImpl operator=null
    FUN public open override fun foo(x: kotlin.Int, s: kotlin.String): kotlin.Unit
      BLOCK_BODY
        CALL 'foo(Int, String): Unit' type=kotlin.Unit operator=null
          $this: GET_VAR '`Test2$IBase$delegate`: BaseImpl' type=BaseImpl operator=null
          x: GET_VAR 'value-parameter x: Int' type=kotlin.Int operator=null
          s: GET_VAR 'value-parameter s: String' type=kotlin.String operator=null
    FUN public open override fun kotlin.String.qux(): kotlin.Unit
      BLOCK_BODY
        CALL 'qux() on String: Unit' type=kotlin.Unit operator=null
          $this: GET_VAR '`Test2$IBase$delegate`: BaseImpl' type=BaseImpl operator=null
          $receiver: $RECEIVER of 'qux() on String: Unit' type=kotlin.String
    PROPERTY val `Test2$IOther$delegate`: IOther
      EXPRESSION_BODY
        CALL 'otherImpl(String, Int): IOther' type=IOther operator=null
          x0: CONST String type=kotlin.String value=''
          y0: CONST Int type=kotlin.Int value='42'
    PROPERTY public open override val kotlin.Byte.z1: kotlin.Int
      PROPERTY_GETTER public open override fun kotlin.Byte.<get-z1>(): kotlin.Int
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='<get-z1>() on Byte: Int'
            CALL '<get-z1>() on Byte: Int' type=kotlin.Int operator=null
              $this: GET_VAR '`Test2$IOther$delegate`: IOther' type=IOther operator=null
              $receiver: $RECEIVER of 'z1: Int on Byte' type=kotlin.Byte
    PROPERTY public open override val x: kotlin.String
      PROPERTY_GETTER public open override fun <get-x>(): kotlin.String
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='<get-x>(): String'
            CALL '<get-x>(): String' type=kotlin.String operator=null
              $this: GET_VAR '`Test2$IOther$delegate`: IOther' type=IOther operator=null
    PROPERTY public open override var kotlin.Byte.z2: kotlin.Int
      PROPERTY_GETTER public open override fun kotlin.Byte.<get-z2>(): kotlin.Int
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='<get-z2>() on Byte: Int'
            CALL '<get-z2>() on Byte: Int' type=kotlin.Int operator=null
              $this: GET_VAR '`Test2$IOther$delegate`: IOther' type=IOther operator=null
              $receiver: $RECEIVER of 'z2: Int on Byte' type=kotlin.Byte
      PROPERTY_SETTER public open override fun kotlin.Byte.<set-z2>(<set-?>: kotlin.Int): kotlin.Unit
        BLOCK_BODY
          CALL '<set-z2>(Int) on Byte: Unit' type=kotlin.Unit operator=null
            $this: GET_VAR '`Test2$IOther$delegate`: IOther' type=IOther operator=null
            $receiver: $RECEIVER of 'z2: Int on Byte' type=kotlin.Byte
            <set-?>: GET_VAR 'value-parameter <set-?>: Int' type=kotlin.Int operator=null
    PROPERTY public open override var y: kotlin.Int
      PROPERTY_GETTER public open override fun <get-y>(): kotlin.Int
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='<get-y>(): Int'
            CALL '<get-y>(): Int' type=kotlin.Int operator=null
              $this: GET_VAR '`Test2$IOther$delegate`: IOther' type=IOther operator=null
      PROPERTY_SETTER public open override fun <set-y>(<set-?>: kotlin.Int): kotlin.Unit
        BLOCK_BODY
          CALL '<set-y>(Int): Unit' type=kotlin.Unit operator=null
            $this: GET_VAR '`Test2$IOther$delegate`: IOther' type=IOther operator=null
            <set-?>: GET_VAR 'value-parameter <set-?>: Int' type=kotlin.Int operator=null
