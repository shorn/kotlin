FILE /augmentedAssignment1.kt
  PROPERTY public var p: kotlin.Int
    EXPRESSION_BODY
      CONST Int type=kotlin.Int value='0'
  FUN public fun testVariable(): kotlin.Unit
    BLOCK_BODY
      VAR var x: kotlin.Int
        CONST Int type=kotlin.Int value='0'
      SET_VAR x type=kotlin.Unit operator=PLUSEQ
        CALL .plus type=kotlin.Int operator=PLUSEQ
          $this: GET_VAR x type=kotlin.Int operator=PLUSEQ
          other: CONST Int type=kotlin.Int value='1'
      SET_VAR x type=kotlin.Unit operator=MINUSEQ
        CALL .minus type=kotlin.Int operator=MINUSEQ
          $this: GET_VAR x type=kotlin.Int operator=MINUSEQ
          other: CONST Int type=kotlin.Int value='2'
      SET_VAR x type=kotlin.Unit operator=MULTEQ
        CALL .times type=kotlin.Int operator=MULTEQ
          $this: GET_VAR x type=kotlin.Int operator=MULTEQ
          other: CONST Int type=kotlin.Int value='3'
      SET_VAR x type=kotlin.Unit operator=DIVEQ
        CALL .div type=kotlin.Int operator=DIVEQ
          $this: GET_VAR x type=kotlin.Int operator=DIVEQ
          other: CONST Int type=kotlin.Int value='4'
      SET_VAR x type=kotlin.Unit operator=PERCEQ
        CALL .mod type=kotlin.Int operator=PERCEQ
          $this: GET_VAR x type=kotlin.Int operator=PERCEQ
          other: CONST Int type=kotlin.Int value='5'
  FUN public fun testProperty(): kotlin.Unit
    BLOCK_BODY
      CALL .<set-p> type=kotlin.Unit operator=PLUSEQ
        <set-?>: CALL .plus type=kotlin.Int operator=PLUSEQ
          $this: CALL .<get-p> type=kotlin.Int operator=PLUSEQ
          other: CONST Int type=kotlin.Int value='1'
      CALL .<set-p> type=kotlin.Unit operator=MINUSEQ
        <set-?>: CALL .minus type=kotlin.Int operator=MINUSEQ
          $this: CALL .<get-p> type=kotlin.Int operator=MINUSEQ
          other: CONST Int type=kotlin.Int value='2'
      CALL .<set-p> type=kotlin.Unit operator=MULTEQ
        <set-?>: CALL .times type=kotlin.Int operator=MULTEQ
          $this: CALL .<get-p> type=kotlin.Int operator=MULTEQ
          other: CONST Int type=kotlin.Int value='3'
      CALL .<set-p> type=kotlin.Unit operator=DIVEQ
        <set-?>: CALL .div type=kotlin.Int operator=DIVEQ
          $this: CALL .<get-p> type=kotlin.Int operator=DIVEQ
          other: CONST Int type=kotlin.Int value='4'
      CALL .<set-p> type=kotlin.Unit operator=PERCEQ
        <set-?>: CALL .mod type=kotlin.Int operator=PERCEQ
          $this: CALL .<get-p> type=kotlin.Int operator=PERCEQ
          other: CONST Int type=kotlin.Int value='5'
