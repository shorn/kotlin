FILE /chainOfSafeCalls.kt
  CLASS CLASS C
    CONSTRUCTOR public constructor C()
      BLOCK_BODY
        DELEGATING_CONSTRUCTOR_CALL 'constructor Any()'
        INSTANCE_INITIALIZER_CALL classDescriptor='C'
    FUN public final fun foo(): C
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='foo(): C'
          THIS of 'C' type=C
    FUN public final fun bar(): C?
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='bar(): C?'
          THIS of 'C' type=C
  FUN public fun test(nc: C?): C?
    BLOCK_BODY
      RETURN type=kotlin.Nothing from='test(C?): C?'
        BLOCK type=C? operator=SAFE_CALL
          VAR val tmp3_safe_receiver: C?
            BLOCK type=C? operator=SAFE_CALL
              VAR val tmp2_safe_receiver: C?
                BLOCK type=C? operator=SAFE_CALL
                  VAR val tmp1_safe_receiver: C?
                    BLOCK type=C? operator=SAFE_CALL
                      VAR val tmp0_safe_receiver: C?
                        GET_VAR 'value-parameter nc: C?' type=C? operator=null
                      WHEN type=C? operator=SAFE_CALL
                        if: CALL 'EQEQ(Any?, Any?): Boolean' type=kotlin.Boolean operator=EQEQ
                          arg0: GET_VAR 'tmp0_safe_receiver: C?' type=C? operator=null
                          arg1: CONST Null type=kotlin.Nothing? value='null'
                        then: CONST Null type=kotlin.Nothing? value='null'
                        else: CALL 'foo(): C' type=C operator=null
                          $this: GET_VAR 'tmp0_safe_receiver: C?' type=C? operator=null
                  WHEN type=C? operator=SAFE_CALL
                    if: CALL 'EQEQ(Any?, Any?): Boolean' type=kotlin.Boolean operator=EQEQ
                      arg0: GET_VAR 'tmp1_safe_receiver: C?' type=C? operator=null
                      arg1: CONST Null type=kotlin.Nothing? value='null'
                    then: CONST Null type=kotlin.Nothing? value='null'
                    else: CALL 'bar(): C?' type=C? operator=null
                      $this: GET_VAR 'tmp1_safe_receiver: C?' type=C? operator=null
              WHEN type=C? operator=SAFE_CALL
                if: CALL 'EQEQ(Any?, Any?): Boolean' type=kotlin.Boolean operator=EQEQ
                  arg0: GET_VAR 'tmp2_safe_receiver: C?' type=C? operator=null
                  arg1: CONST Null type=kotlin.Nothing? value='null'
                then: CONST Null type=kotlin.Nothing? value='null'
                else: CALL 'foo(): C' type=C operator=null
                  $this: GET_VAR 'tmp2_safe_receiver: C?' type=C? operator=null
          WHEN type=C? operator=SAFE_CALL
            if: CALL 'EQEQ(Any?, Any?): Boolean' type=kotlin.Boolean operator=EQEQ
              arg0: GET_VAR 'tmp3_safe_receiver: C?' type=C? operator=null
              arg1: CONST Null type=kotlin.Nothing? value='null'
            then: CONST Null type=kotlin.Nothing? value='null'
            else: CALL 'foo(): C' type=C operator=null
              $this: GET_VAR 'tmp3_safe_receiver: C?' type=C? operator=null
