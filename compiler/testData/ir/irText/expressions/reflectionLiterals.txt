FILE /reflectionLiterals.kt
  CLASS CLASS A
    CONSTRUCTOR public constructor A()
      BLOCK_BODY
        DELEGATING_CONSTRUCTOR_CALL 'constructor Any()'
        INSTANCE_INITIALIZER_CALL classDescriptor='A'
    FUN public final fun foo(): kotlin.Unit
      BLOCK_BODY
  FUN public fun bar(): kotlin.Unit
    BLOCK_BODY
  PROPERTY public val qux: kotlin.Int = 42
    EXPRESSION_BODY
      CONST Int type=kotlin.Int value='42'
  PROPERTY public val test1: kotlin.reflect.KClass<A>
    EXPRESSION_BODY
      CLASS_REFERENCE 'A' type=kotlin.reflect.KClass<A>
  PROPERTY public val test2: kotlin.reflect.KClass<kotlin.Int>
    EXPRESSION_BODY
      GET_CLASS type=kotlin.reflect.KClass<kotlin.Int>
        CALL '<get-qux>(): Int' type=kotlin.Int operator=GET_PROPERTY
  PROPERTY public val test3: kotlin.reflect.KFunction1<A, kotlin.Unit>
    EXPRESSION_BODY
      CALLABLE_REFERENCE 'foo(): Unit' type=kotlin.reflect.KFunction1<A, kotlin.Unit> operator=null
  PROPERTY public val test4: kotlin.reflect.KFunction0<A>
    EXPRESSION_BODY
      CALLABLE_REFERENCE 'constructor A()' type=kotlin.reflect.KFunction0<A> operator=null
  PROPERTY public val test5: kotlin.reflect.KFunction0<kotlin.Unit>
    EXPRESSION_BODY
      CALLABLE_REFERENCE 'foo(): Unit' type=kotlin.reflect.KFunction0<kotlin.Unit> operator=null
        $this: CALL 'constructor A()' type=A operator=null
  PROPERTY public val test6: kotlin.reflect.KFunction0<kotlin.Unit>
    EXPRESSION_BODY
      CALLABLE_REFERENCE 'bar(): Unit' type=kotlin.reflect.KFunction0<kotlin.Unit> operator=null
  PROPERTY public val test7: kotlin.reflect.KProperty0<kotlin.Int>
    EXPRESSION_BODY
      CALLABLE_REFERENCE 'qux: Int' type=kotlin.reflect.KProperty0<kotlin.Int> operator=null
