FILE /safeCallWithIncrementDecrement.kt
  DUMMY C
  PROPERTY public var test.C?.p: kotlin.Int getter=<get-p> setter=<set-p>
  PROPERTY_GETTER public fun test.C?.<get-p>(): kotlin.Int property=p
    BLOCK_BODY
      RETURN type=<no-type>
        CONST Int type=kotlin.Int value='42'
  PROPERTY_SETTER public fun test.C?.<set-p>(/*0*/ value: kotlin.Int): kotlin.Unit property=p
    BLOCK_BODY
  FUN public operator fun kotlin.Int?.inc(): kotlin.Int?
    BLOCK_BODY
      RETURN type=<no-type>
        WHEN type=kotlin.Int? operator=SAFE_CALL
          if: CALL .EQEQ type=kotlin.Boolean operator=EQEQ
            arg0: $RECEIVER of: inc type=kotlin.Int?
            arg1: CONST Null type=kotlin.Nothing? value='null'
          then: CONST Null type=kotlin.Nothing? value='null'
          else: CALL .inc type=kotlin.Int operator=null
            $this: $RECEIVER of: inc type=kotlin.Int?
  FUN public operator fun kotlin.Int?.get(/*0*/ index: kotlin.Int): kotlin.Int
    BLOCK_BODY
      RETURN type=<no-type>
        CONST Int type=kotlin.Int value='42'
  FUN public operator fun kotlin.Int?.set(/*0*/ index: kotlin.Int, /*1*/ value: kotlin.Int): kotlin.Unit
    BLOCK_BODY
  FUN public fun testProperty(/*0*/ nc: test.C?): kotlin.Unit
    BLOCK_BODY
      WHEN type=kotlin.Int? operator=SAFE_CALL
        if: CALL .EQEQ type=kotlin.Boolean operator=EQEQ
          arg0: GET_VAR nc type=test.C? operator=null
          arg1: CONST Null type=kotlin.Nothing? value='null'
        then: CONST Null type=kotlin.Nothing? value='null'
        else: BLOCK type=kotlin.Int operator=POSTFIX_INCR
          VAR val tmp1: kotlin.Int
            CALL .<get-p> type=kotlin.Int operator=POSTFIX_INCR
              $this: GET_VAR nc type=test.C? operator=null
          CALL .<set-p> type=kotlin.Unit operator=POSTFIX_INCR
            $this: GET_VAR nc type=test.C? operator=null
            value: CALL .inc type=kotlin.Int? operator=POSTFIX_INCR
              $receiver: GET_VAR tmp1 type=kotlin.Int operator=null
          GET_VAR tmp1 type=kotlin.Int operator=null
  FUN public fun testArrayAccess(/*0*/ nc: test.C?): kotlin.Unit
    BLOCK_BODY
      BLOCK type=kotlin.Int operator=POSTFIX_INCR
        VAR val tmp3_array: kotlin.Int?
          WHEN type=kotlin.Int? operator=SAFE_CALL
            if: CALL .EQEQ type=kotlin.Boolean operator=EQEQ
              arg0: GET_VAR nc type=test.C? operator=null
              arg1: CONST Null type=kotlin.Nothing? value='null'
            then: CONST Null type=kotlin.Nothing? value='null'
            else: CALL .<get-p> type=kotlin.Int operator=GET_PROPERTY
              $this: GET_VAR nc type=test.C? operator=null
        VAR val tmp4: kotlin.Int
          CALL .get type=kotlin.Int operator=POSTFIX_INCR
            $receiver: GET_VAR tmp3_array type=kotlin.Int? operator=null
            index: CONST Int type=kotlin.Int value='0'
        CALL .set type=kotlin.Unit operator=POSTFIX_INCR
          $receiver: GET_VAR tmp3_array type=kotlin.Int? operator=null
          index: CONST Int type=kotlin.Int value='0'
          value: CALL .inc type=kotlin.Int operator=POSTFIX_INCR
            $this: GET_VAR tmp4 type=kotlin.Int operator=null
        GET_VAR tmp4 type=kotlin.Int operator=null
